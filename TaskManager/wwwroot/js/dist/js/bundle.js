(()=>{"use strict";class e{constructor(e){this.mainUrl=e}sendRequest(e,t){return fetch(`${this.mainUrl+e}`,t)}getRequest(e){return this.sendRequest(e)}deleteRequest(e){return this.sendRequest(e,{method:"DELETE"})}postRequest(e,t){return this.sendRequest(e,{method:"POST",body:JSON.stringify(t),headers:{"Content-type":"application/json"}})}LoadAllTasks(){return this.getRequest("/GetTasksList")}LoadTaskTreeById(e){return this.getRequest(`/GetTaskTreeById/${e}`)}LoadTaskById(e){return this.getRequest(`/GetTaskById/${e}`)}UpdateTaskStatus(e){return this.postRequest("/UpdateTaskStatus",e)}UpdateTask(e){return this.postRequest("/UpdateTask",e)}DeleteTask(e){return this.deleteRequest(`/DeleteTask/${e}`)}SendData(e){return this.postRequest("/SendTask",e)}}const t=(...e)=>{e.forEach((e=>{e.classList.contains("hidden")&&e.classList.remove("hidden")}))},a=(...e)=>{e.forEach((e=>{e.classList.contains("hidden")||e.classList.add("hidden")}))},s=(...e)=>{e.forEach((e=>{e.classList.contains("disabled")&&e.classList.remove("disabled")}))},n=(...e)=>{e.forEach((e=>{e.classList.contains("disabled")||e.classList.add("disabled")}))},r=(...e)=>{e.forEach((e=>{e.value=""}))},c=(...e)=>{e.forEach((e=>{e.classList.contains("wrong_input")&&e.classList.remove("wrong_input")}))},d=(...e)=>{e.forEach((e=>{e.classList.contains("wrong_input")||e.classList.add("wrong_input")}))};document.addEventListener("DOMContentLoaded",(()=>{const o=document.querySelector(".task_list"),l=document.querySelector(".selected_task"),i=document.querySelector("[data-task-childs]"),u=document.querySelector("[data-edit-panel]"),m=document.querySelector("[data-subtasks-panel]"),k=document.querySelector("[data-menu-panel]"),v=document.querySelector("[data-button-panel]"),g=document.querySelector(".status_bar"),S=document.querySelector("[data-selected-task]"),y=document.querySelector(".modal"),q=document.querySelector(".modal_title"),h=document.querySelector(".mini_modal"),p=document.querySelector("[data-delete-task]"),L=document.querySelector("[data-add-subtask]"),T=document.querySelector("[data-edit-task]"),f=document.querySelector("[data-save-task]"),E=document.querySelector("[data-cancel-changes]"),$=document.querySelector("[data-status-begin]"),b=document.querySelector("[data-status-pause]"),_=document.querySelector("[data-status-resume]"),D=document.querySelector("[data-status-end]"),w=document.querySelector("[data-status-panel]"),x=document.querySelector('[name="taskName"]'),I=document.querySelector('[name="taskDescription"]'),R=document.querySelector('[name="taskPerformer"]'),N=document.querySelector('[name="estimate"]'),U=document.querySelector('[name="parent"]'),P=document.querySelector("[data-confirm]"),A=document.querySelector(".modal_close"),B=document.querySelector("[ data-cancel]"),H=document.querySelector('[name="factualEstimate"]'),M=document.querySelector("[data-mini-confirm]"),j=document.querySelector("[data-mini-cancel]"),C=document.querySelector("[data-sel-taskName]"),G=document.querySelector("[data-sel-taskPerformer]"),O=document.querySelector("[data-sel-taskDescription]"),F=document.querySelector("[data-sel-estimateSubTasks]"),J=document.querySelector("[data-sel-taskRegDate]"),z=document.querySelector("[data-sel-estimate]"),K=document.querySelector("[data-sel-factualSubtasks]"),Q=document.querySelector("[data-sel-factualEstimate]"),V=document.querySelector("[data-sel-taskStatusName]"),W=document.querySelector("[data-sel-estimateSummary]"),X=document.querySelector("[data-sel-factualSummary]"),Y=document.querySelector("[data-ended-panel]"),Z=document.querySelector("[data-sel-completeddate]"),ee=document.querySelector('[name="updateName"]'),te=document.querySelector('[name="updateDescription"]'),ae=document.querySelector('[name="updatePerformer"]'),se=document.querySelector('[name="updateEstimate"]'),ne=document.querySelector('[name="updateFactual"]'),re=e=>e.getAttribute("key"),ce=`${document.location.origin}/Home`,de=new e(ce),oe=(e,t)=>{var a;200==e?(g.innerText=`${t}`,(a=g).classList.contains("wrong_status")&&a.classList.remove("wrong_status")):(g.innerText=`${t}`,(e=>{e.classList.contains("wrong_status")||e.classList.add("wrong_status")})(g))},le=(e,t,a=!1)=>{let s={taskid:{},statusid:{},factualestimate:{}};s.taskid=e,s.statusid=t,s.factualestimate=1==a?H.value:"",de.UpdateTaskStatus(s).then((t=>{if(!t.ok)throw new Error("Задача не может быть завершена - одна из подзадач незавершена...");ve(e),oe(200,"Статус обновлен успешно...")})).catch((e=>oe(9e3,e)))};w.addEventListener("click",(e=>{const a=re(S);e.target&&e.target===$&&le(a,1),e.target&&e.target===_&&le(a,1),e.target&&e.target===b&&le(a,2),e.target&&e.target===D&&(t(h),h.classList.add("open_modal"))})),H.addEventListener("input",(e=>{he(e.target,/^0|\D/,M)})),M.addEventListener("click",(()=>{const e=re(S);""!=H.value?(le(e,3,!0),ie()):(d(H),n(M))}));const ie=()=>{r(H),a(h),h.classList.remove("open_modal"),c(H)};j.addEventListener("click",(()=>{ie()}));const ue=()=>{de.LoadAllTasks().then((e=>e.json())).then((e=>me(e.$values)))};ue();const me=e=>{o.innerHTML="",e.forEach((t=>{null==t.parentTaskID&&(o.innerHTML+=`<div id="#${t.taskID}"><button class="btn_expand child_button">></button><div class="listElem" key="${t.taskID}">${t.taskName}</div></div>`,ke(e,t.taskID))}))},ke=(e,t)=>{e.forEach((a=>{if(a.parentTaskID===t){const s=document.querySelector(`[id="#${t}"]`);s.innerHTML+=`<div id="#${a.taskID}" class="child_node hidden"><button class="btn_expand child_button">></button><div class="listElem" key="${a.taskID}">${a.taskName}</div></div>`,s.firstChild.classList.remove("child_button"),ke(e,a.taskID)}}))};o.addEventListener("click",(e=>{e.target&&e.target.classList.contains("listElem")&&ve(re(e.target)),e.target&&e.target.classList.contains("btn_expand")&&(e.target.classList.contains("btn_narrow")?(e.target.innerText=">",e.target.classList.remove("btn_narrow"),e.target.parentNode.querySelectorAll(".child_node").forEach((e=>{e.classList.add("hidden"),e.querySelectorAll(".btn_expand").forEach((e=>{e.classList.remove("btn_narrow"),e.innerText=">"}))}))):(e.target.innerText="∨",e.target.classList.add("btn_narrow"),e.target.parentNode.childNodes.forEach((e=>e.classList.remove("hidden")))))})),k.addEventListener("click",(e=>{e.target&&e.target.classList.contains("btn_add")&&Le(),e.target&&e.target.classList.contains("btn_refresh")&&(ue(),alert("загружены"))}));const ve=e=>{de.LoadTaskTreeById(e).then((e=>{if(e.ok)return e.json();throw new Error("Задача загружена некорректно...")})).then((t=>{ge(t.$values,e),oe(200,"Задача загружена успешно...")})).catch((e=>oe(9e3,e)))},ge=(e,r)=>{i.innerHTML="",t(l),a(u),e.length>1?t(m):a(m),e.forEach((e=>{e.taskID==r&&Se(e),e.parentTaskID==r&&ye(e)})),s(p,L,T),n(f,E)},Se=e=>{C.innerText=`${e.taskName}`,S.setAttribute("key",`${e.taskID}`),G.innerText=`${e.taskPerformer}`,O.innerText=`${e.taskDescription}`,F.innerText=`${e.estimate}`;let s=e.taskRegDate;if(s=s.replace("T"," "),s=s.split(".",1),J.innerText=`${s}`,z.innerText=`${e.estimateSubTasks||""}`,K.innerText=`${e.factualEstimateSubTasks||""}`,V.innerText=`${e.taskStatusName}`,W.innerText=`${e.summuryEstimate||""}`,Q.innerText=`${e.factualEstimate||""}`,X.innerText=`${e.summuryFactual||""}`,3==e.taskStatusID){let a=e.completeDate;a=a.replace("T"," "),a=a.split(".",1),Z.innerText=`${a}`,t(Y)}else Z.innerText="",a(Y);var n;0==(n=e.taskStatusID)&&(t($,w),a(b,_,D)),1==n&&(t(b,D,w),a($,_)),2==n&&(t(_,w),a(b,$,D)),3==n&&a(w,_,b,$,D)},ye=e=>{i.innerHTML+=`<div class="row">\n                                    <div class="col-lg-3">${e.taskName}</div>\n                                    <div class="col-lg-2">${e.taskPerformer}</div>\n                                    <div class="col-lg-2">${e.taskStatusName}</div>\n                                    <div class="col-lg-5">\n                                        <div class="row">\n                                            <div class="col-lg-3">${e.estimate}</div>\n                                            <div class="col-lg-3">${e.estimateSubTasks||""}</div>\n                                            <div class="col-lg-3">${e.factualEstimate||""}</div>\n                                            <div class="col-lg-3">${e.factualEstimateSubTasks||""}</div>\n                                        </div>\n                                    </div> \n                                    <div class="col-12 separator"></div>                                    \n                                </div>`};v.addEventListener("click",(e=>{const r=re(S);if(e.target&&e.target===p&&!e.target.classList.contains("disabled")){const e=re(S);qe(e)}e.target&&e.target===L&&!e.target.classList.contains("disabled")&&Le(r),e.target&&e.target===T&&!e.target.classList.contains("disabled")&&(e=>{de.LoadTaskById(e).then((e=>e.json())).then((e=>{var r;r=e,t(u),a(l),ee.value=`${r.taskName}`,te.value=`${r.taskDescription}`,ae.value=`${r.taskPerformer}`,se.value=`${r.estimate}`,ne.value=`${r.factualEstimate}`,s(f,E),n(p,L,T),a(w)}))})(r),e.target&&e.target===f&&!e.target.classList.contains("disabled")&&(e=>{let t={id:{},name:{},desc:{},performer:{},estimate:{},factualestimate:{}};t.id=e,t.name=ee.value,t.desc=te.value,t.performer=ae.value,t.estimate=se.value,t.factualestimate=ne.value,de.UpdateTask(t).then((()=>{ve(e),ue()}))})(r),e.target&&e.target===E&&!e.target.classList.contains("disabled")&&ve(r)}));const qe=e=>{de.DeleteTask(e).then((e=>{if(!e.ok)throw new Error("Задача загружена некорректно...");oe(200,"Задача успешно удалена...")})).then((()=>{ue(),a(w,l,u),n(p,L,T,f,E)})).catch((e=>oe(9e3,e)))};y.addEventListener("click",(e=>{!e.target||e.target!==B&&e.target!==A||pe()})),P.addEventListener("click",(()=>{let e=!0,t={name:{},desc:{},performer:{},estimate:{},parent:{}};""!=x.value?t.name=x.value:(e=!1,d(x)),""!=I.value?t.desc=I.value:(e=!1,d(I)),""!=R.value?t.performer=R.value:(e=!1,d(R)),""!=N.value?t.estimate=N.value:(e=!1,d(N)),t.parent=U.value,e&&(Te(t),pe())}));const he=(e,t,a)=>{t.test(e.value)?(n(a),d(e)):(s(a),c(e))},pe=()=>{r(x,I,R,N,U),c(x,I,R,N,U),y.classList.remove("open_modal")},Le=(e=null)=>{y.classList.add("open_modal"),U.value=e,q.innerText=null==e?"Добавить задачу":"Добавить подзадачу",(()=>{const e=/\<|\>|\[|\]/m,t=/^0|\D/;N.addEventListener("input",(e=>{he(e.target,t,P)})),I.addEventListener("input",(t=>{he(t.target,e,P)})),R.addEventListener("input",(t=>{he(t.target,e,P)})),x.addEventListener("input",(t=>{he(t.target,e,P)}))})()},Te=e=>{de.SendData(e).then((e=>{if(!e.ok)throw new Error("Ошибка при добавлении задачи...");oe(200,"Задача добавлена успешно...")})).then((()=>{ue()})).catch((e=>oe(9e3,e)))}}))})();
//# sourceMappingURL=bundle.js.map